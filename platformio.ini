; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = M5Atom-AtomMIC-Puzzle
[env]
platform = espressif32
framework = arduino
upload_speed = 1500000
monitor_speed = 115200
board_build.f_flash = 80000000L
build_flags = -DCORE_DEBUG_LEVEL=4
lib_deps = 
	m5stack/M5Unified@^0.2.2
	FastLED/FastLED@^3.7.0
lib_ldf_mode = deep

; Atom Lite / Atom Matrix  With AtomMIC
[env:M5Atom-AtomMIC-Puzzle]
board = m5stack-atom
build_flags = 
    -DPDM_CLK=22
    -DPDM_DAT=19
	-DLED_GPIO=26

; Atom Lite / Atom Matrix  With EchoBase
[env:M5Atom-EchoBase-Puzzle]
board = m5stack-atom
lib_deps =
    m5stack/M5Atomic-EchoBase@^1.0.0
    ${env.lib_deps}
build_flags = 
    -DECHO_BASE

; AtomU
[env:M5AtomU-Puzzle]
board = m5stack-atom
build_flags = 
    -DPDM_CLK=5
    -DPDM_DAT=19
	-DLED_GPIO=26

; Atom Echo
[env:M5Atom_Echo-Puzzle]
board = m5stack-atom
build_flags = 
    -DPDM_CLK=33
    -DPDM_DAT=23
	-DLED_GPIO=26

; AtomS3R / AtomS3 / AtomS3 Lite  With AtomMIC
[env:M5AtomS3-AtomMIC-Puzzle]
board = m5stack-atoms3
build_flags = 
    -DPDM_CLK=5
    -DPDM_DAT=6
	-DLED_GPIO=2

; AtomS3R / AtomS3 / AtomS3 Lite  With EchoBase
[env:M5AtomS3-EchoBase-Puzzle]
board = m5stack-atoms3
lib_deps =
    m5stack/M5Atomic-EchoBase@^1.0.0
    ${env.lib_deps}
build_flags = 
    -DECHO_BASE_S3

; AtomS3U
[env:M5AtomS3U-Puzzle]
board = m5stack-atoms3
build_flags = 
    -DPDM_CLK=39
    -DPDM_DAT=38
	-DLED_GPIO=2
